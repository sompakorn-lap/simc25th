generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  APPLICANT
  SELECTED
  PARTICIPANT
  ADMIN
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique @default(uuid())
  email     String   @unique
  citizenId String   @unique
  userRole  UserRole
}

model SelectedStatus {
  id                String         @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  statusTranscript  DocumentStatus @default(IN_PROGRESS)
  statusPermission  DocumentStatus @default(IN_PROGRESS)
  statusTransaction DocumentStatus @default(IN_PROGRESS)
}

enum DocumentStatus {
  IN_PROGRESS
  SUMITTED
  APPROVED
}

model Profile {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  userId             String         @unique
  // applicant
  citizenId          String         @unique
  fullname           String         @unique
  age                Int            @default(16)
  gender             String         @default("")
  school             String         @default("")
  grade              String
  // contact
  telephone          String         @unique
  address            String         @default("")
  lineID             String         @unique
  email              String         @unique
  // parent
  parentFullname     String         @default("")
  relation           String         @default("")
  parentTelephone    String         @default("")
  // medical data
  medicalCondition   String         @default("")
  medicalRequirement String         @default("")
  allergy            String         @default("")
  dietaryLimitation  String         @default("")
  // status
  status             DocumentStatus @default(IN_PROGRESS)
}

model File {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  fileId   String @unique
  fileName String @unique
}

enum QuestionType {
  LONG_ANSWER
  SHORT_ANSWER
  MCQ
}

enum QuestionSet {
  IQ
  ETHICS
  KNOWLEDGE
  SIRIRAJ
  CREATIVE
}

type Choice {
  text  String
  score Float
}

model Question {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  questionSet       QuestionSet
  questionId        String       @unique @default(uuid())
  questionType      QuestionType
  questionText      String
  questionImageName String?
  choices           Choice[]
}

model Submission {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  userId       String
  questionSet  QuestionSet
  questionIds  String[]
  answers      Answer[]
  currentIndex Int         @default(0)

  @@unique([userId, questionSet])
}

model Answer {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  questionSet QuestionSet
  questionId  String
  answer      String         @default("")
  score       Float          @default(0)
  status      DocumentStatus @default(IN_PROGRESS)
  submission  Submission     @relation(fields: [userId, questionSet], references: [userId, questionSet])

  @@unique([userId, questionId])
}
